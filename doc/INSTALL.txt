## Joruri Mail v2.0.0 インストールマニュアル                2016.05.16

**********************************************************************
 1 想定環境
**********************************************************************

[システム]
OS         : CentOS 6.7 (64bit)
Webサーバ  : Apache 2.2
DBシステム : MySQL 5
Ruby       : 2.3.1
Rails      : 4.2.6
Mailサーバ : SMTP, IMAP4

[設定]
IPアドレス : 192.168.0.2
メールドメイン : localhost.localdomain.jp

**********************************************************************
 2 CentOS のインストール
**********************************************************************

CentOSをインストールします。

※インストール完了後、ご利用になられる環境に合わせて適切なセキュリティ設定をお願いします。CentOSに関するセキュリティ設定については、本マニュアルの範囲外となります。

rootユーザに変更します。

  $ su -

**********************************************************************
 3 事前準備
**********************************************************************

必要なパッケージをインストールします。

  # yum -y install epel-release
  # yum -y install wget git npm

**********************************************************************
 4 Ruby のインストール
**********************************************************************

依存パッケージをインストールします。

  # yum -y install make automake gcc-c++ glibc-headers glibc-devel autoconf patch \
      libyaml-devel readline-devel zlib-devel libffi-devel openssl-devel libtool bison

Rubyをインストールします。

  # cd /usr/local/src
  # wget https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz
  # tar xvzf ruby-2.3.1.tar.gz
  # cd ruby-2.3.1
  # ./configure
  # make && make install

bundler をインストールします。

  # gem install bundler

**********************************************************************
 5 Joruri Mail のインストール
**********************************************************************

依存パッケージをインストールします。

  # yum -y install libjpeg-devel libpng-devel ImageMagick-devel shared-mime-info libicu-devel

Joruriユーザを作成します。

  # useradd -m joruri

Joruri ソースコードを設置します。

  # mkdir /var/share
  # git clone https://github.com/joruri/joruri-mail.git /var/share/jorurimail
  # chown -R joruri:joruri /var/share/jorurimail

**********************************************************************
 6 Apache, Passenger のインストール
**********************************************************************

======================================================================
 6.1 Apache のインストール
======================================================================

Apacheをインストールします。

  # yum -y install httpd-devel
  
 設定ファイルを編集します。

  # vi /etc/httpd/conf/httpd.conf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  ServerName 192.168.0.2    #変更
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

設定ファイルにエラーがないことを確認し、Apacheを起動します。

  # /sbin/service httpd configtest
  # /sbin/service httpd start

自動起動に設定します。

  # /sbin/chkconfig httpd on

======================================================================
 6.2 Passenger のインストール
======================================================================

Passengerをインストールします。

  # yum -y install curl-devel
  # gem install passenger -v 5.0.23
  # passenger-install-apache2-module -a
  
  ( 画面の内容を確認して Enterキーを押してください。 )

Apacheに設定を追加します。

  # cp /var/share/jorurimail/config/samples/passenger.conf \
  #   /etc/httpd/conf.d/

**********************************************************************
 7 MySQL のインストール
**********************************************************************

MySQLをインストールします。

  # yum -y install mysql-server mysql-devel

文字エンコーディングの標準を UTF-8 に設定します。

  # vi /etc/my.cnf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  [mysqld]
  default-character-set=utf8    #追加
  
  [client]                      #追加（末尾に追加）
  default-character-set=utf8    #追加
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

MySQLを起動します。

  # /usr/bin/mysql_install_db --user=mysql
  # /sbin/service mysqld start

自動起動に設定します。

  # /sbin/chkconfig mysqld on
  
rootユーザのパスワードを設定します。

  # /usr/bin/mysqladmin -u root password "pass"

joruriユーザを作成します。

  # /usr/bin/mysql -u root -ppass \
  #   -e "grant all on *.* to joruri@localhost IDENTIFIED BY 'pass'"

**********************************************************************
 8 Joruri Mail の設定
**********************************************************************

Joruriユーザに変更します。

  # su - joruri
  $ cd /var/share/jorurimail

======================================================================
 8.1 ライブラリ のインストール
======================================================================

必要ライブラリをインストールします。

  $ bundle install --without development test
  $ bundle exec bower:install RAILS_ENV=production

======================================================================
 8.2 設定ファイルの変更
======================================================================

サンプルの設定ファイルをコピーします。

  $ cp /var/share/jorurimail/config/original/* /var/share/jorurimail/config/

基本設定を変更します。

  $ vi config/core.yml
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  title  : Joruri Mail
  uri    : http://192.168.0.2/
  proxy  : ※プロキシ
  mail_domain: ※メールドメイン
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  
  ※プロキシ
  プロキシサーバが導入されている場合は
  http://example:8080/ の様に記述してください。

DB接続情報を変更します。

  $ vi config/database.yml

SMTP, IMAPサーバ接続情報を変更します。

  $ vi config/smtp.yml
  $ vi config/imap.yml

Joruri Gwへのシングルサインオン設定を変更します。（Joruri Gwと連携する場合のみ）

  $ vi config/sso.yml

VirtualHost設定を変更します。

  $ vi config/virtual-hosts/jorurimail.conf

secret keyを設定します。

  $ bundle exec rake secret RAILS_ENV=production
    ( 出力されたシークレットキーをコピーします )

  $ vi config/secrets.yml
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  production:
    secret_key_base: ( コピーしたシークレットキーをペーストします )
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

======================================================================
 8.3 データベースの作成
======================================================================

データベースを作成します。

  $ /usr/bin/mysql -u root -ppass -e "create database jorurimail"

テーブルを作成します。

  $ bundle exec rake db:schema:load RAILS_ENV=production

初期データを登録します。

  $ bundle exec rake db:seed RAILS_ENV=production

サンプルデータを登録します。

  $ bundle exec rake db:seed:demo RAILS_ENV=production

======================================================================
 8.4 assets のコンパイル
======================================================================

assetsをコンパイルします。

  $ bundle exec rake assets:precompile RAILS_ENV=production

======================================================================
 8.5 VirtualHost の反映
======================================================================

Apacheに設定を追加します。

  $ su -
  # ln -s /var/share/jorurimail/config/virtual-host/jorurimail.conf /etc/httpd/conf.d/jorurimail.conf

Apache を再起動します。

  # /sbin/service httpd configtest
  # /sbin/service httpd restart


ここまでの手順で Joruri Mail にアクセスすることができます。

  メーラ画面 : http://192.168.0.2/

次のユーザが登録されています。

    管理者（システム管理者）
      ユーザID   : admin
      パスワード : admin

    一般ユーザ（徳島　太郎）
      ユーザID   : user1
      パスワード : user1

    一般ユーザ（阿波　花子）
      ユーザID   : user2
      パスワード : user2

    一般ユーザ（吉野　三郎）
      ユーザID   : user3
      パスワード : user3

**********************************************************************

